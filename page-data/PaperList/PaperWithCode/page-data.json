{"componentChunkName":"component---src-templates-docs-js","path":"/PaperList/PaperWithCode","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"2a1d77b3-be5b-5b2d-9ee7-4bc01806340e","title":"Paper with Code","slug":"/PaperList/PaperWithCode"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Paper with Code\",\n  \"metaTitle\": \"AI4DB Paper\",\n  \"metaDescription\": \"Paper List that apply Artificial Intelligence/ Machine Learning technology to Database\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"1. AQP\"), mdx(\"p\", null, \"(1) DBEST: Revisiting approximate query processing engines with machine learning models (SIGMOD 2019) \"), mdx(\"p\", null, \"(2) Learned Approximate Query Processing: Make it Light, Accurate and Fast(DBEST++) (CIDR 2021) \"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/qingzma/DBEstClient\"\n  }, \"https://github.com/qingzma/DBEstClient\"), \" \"), mdx(\"h1\", null, \"2. Cardinality Estimation\"), mdx(\"p\", null, \"(1) Learned Cardinalities: Estimating Correlated Joins with Deep Learning(MSCN) (CIDR 2018)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/andreaskipf/learnedcardinalities\"\n  }, \"https://github.com/andreaskipf/learnedcardinalities\"), \" \"), mdx(\"p\", null, \"(2) Deep Unsupervised Cardinality Estimation (VLDB 2019)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/naru-project/naru\"\n  }, \"https://github.com/naru-project/naru\"), \" \"), mdx(\"p\", null, \"(3) QuickSel: Quick Selectivity Learning with Mixture Models (SIGMOD 2020)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/illinoisdata/quicksel\"\n  }, \"https://github.com/illinoisdata/quicksel\"), \" \"), mdx(\"p\", null, \"(4) DeepDB: Learn from Data, not from Queries! (VLDB 2020)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/DataManagementLab/deepdb-public\"\n  }, \"https://github.com/DataManagementLab/deepdb-public\"), \" \"), mdx(\"p\", null, \"(5) NeuroCard: One Cardinality Estimator for All Tables (VLDB 2020)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/neurocard/neurocard\"\n  }, \"https://github.com/neurocard/neurocard\"), \" \"), mdx(\"p\", null, \"(6) Consistent and Flexible Selectivity Estimation for High-Dimensional Data (SIGMOD 2021)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/yyssl88/SelNet-Estimation\"\n  }, \"https://github.com/yyssl88/SelNet-Estimation\"), \" \"), mdx(\"p\", null, \"(7) A Unified Deep Model of Learning from both Data and Queries for Cardinality \"), mdx(\"p\", null, \"Estimation (SIGMOD 2021)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/pagegitss/UAE\"\n  }, \"https://github.com/pagegitss/UAE\"), \"        \"), mdx(\"p\", null, \"(8) Are We Ready For Learned Cardinality Estimation? (VLDB2021)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/sfu-db/AreCELearnedYet\"\n  }, \"https://github.com/sfu-db/AreCELearnedYet\"), \" \"), mdx(\"h1\", null, \"3. Cost Estimation\"), mdx(\"p\", null, \"(1) An End-to-End Learning-based Cost Estimator (VLDB 2019)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/TsinghuaDatabaseGroup/AI4DBCode/tree/master/LeanredOptimizer/LearnedCostEstimator\"\n  }, \"https://github.com/TsinghuaDatabaseGroup/AI4DBCode/tree/master/LeanredOptimizer/LearnedCostEstimator\"), \" \"), mdx(\"p\", null, \"(2) Plan-Structured Deep Neural Network Models for Query Performance Prediction (VLDB 2019)\"), mdx(\"p\", null, \"A sample implementation: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/rabbit721/QPPNet\"\n  }, \"https://github.com/rabbit721/QPPNet\"), \" \"), mdx(\"h1\", null, \"4. Join Order Optimization\"), mdx(\"p\", null, \"(1) PGMJoins: Random Join Sampling with Graphical Models (SIGMOD 2021)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/shanghoosh1/PGMJoins\"\n  }, \"https://github.com/shanghoosh1/PGMJoins\"), \" \"), mdx(\"p\", null, \"(2) Reinforcement Learning with Tree-LSTM for Join Order Selection (ICDE 2020)\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/TsinghuaDatabaseGroup/AI4DBCode/tree/master/LeanredOptimizer/LeanredJoinOrder/src-RTOS\"\n  }, \"https://github.com/TsinghuaDatabaseGroup/AI4DBCode/tree/master/LeanredOptimizer/LeanredJoinOrder/src-RTOS\"), \" \"), mdx(\"h1\", null, \"5. Query Plan\"), mdx(\"p\", null, \"(1) Neo: A Learned Query Optimizer (VLDB 2019) \"), mdx(\"p\", null, \"Neo\\u4E2D\\u4F7F\\u7528\\u7684\\u6811\\u5377\\u79EF\\uFF1A\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/RyanMarcus/TreeConvolution\"\n  }, \"https://github.com/RyanMarcus/TreeConvolution\"), \" \"), mdx(\"p\", null, \"\\u884C\\u5411\\u91CF\\u5D4C\\u5165\\u90E8\\u5206\\uFF1A\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/parimarjan/db-embedding-tools\"\n  }, \"https://github.com/parimarjan/db-embedding-tools\"), \" \"), mdx(\"p\", null, \"(2) Bao: Making Learned Query Optimization Practical (SIGMOD 2021) \"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/learnedsystems/baoforpostgresql\"\n  }, \"https://github.com/learnedsystems/baoforpostgresql\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#1-aqp","title":"1. AQP"},{"url":"#2-cardinality-estimation","title":"2. Cardinality Estimation"},{"url":"#3-cost-estimation","title":"3. Cost Estimation"},{"url":"#4-join-order-optimization","title":"4. Join Order Optimization"},{"url":"#5-query-plan","title":"5. Query Plan"}]},"parent":{"relativePath":"PaperList/PaperWithCode.md"},"frontmatter":{"metaTitle":"AI4DB Paper","metaDescription":"Paper List that apply Artificial Intelligence/ Machine Learning technology to Database"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/","title":"Landing Page"}}},{"node":{"fields":{"slug":"/PaperList","title":"AI4DB Paper List"}}},{"node":{"fields":{"slug":"/PaperList/PaperWithCode","title":"Paper with Code"}}}]}},"pageContext":{"id":"2a1d77b3-be5b-5b2d-9ee7-4bc01806340e"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}