{"componentChunkName":"component---src-templates-docs-js","path":"/PaperList","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"12efaf38-6b2a-584d-ba83-9f69802dfd28","title":"AI4DB Paper List","slug":"/PaperList"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"AI4DB Paper List\",\n  \"metaTitle\": \"AI4DB Paper\",\n  \"metaDescription\": \"Paper List that apply Artificial Intelligence/ Machine Learning technology to Database\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"1. Approximate Query Processing\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"DBEST: Revisiting approximate query processing engines with machine learning models (SIGMOD 2019)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Learned Approximate Query Processing: Make it Light, Accurate and Fast (CIDR 2021)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"DBEst\\u7684\\u540E\\u7EED\\u5DE5\\u4F5C\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"DBEst\\u6700\\u65B0\\u4EE3\\u7801\\uFF1A\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/qingzma/DBEstClient\"\n  }, \"https://github.com/qingzma/DBEstClient\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Approximate Query Processing for Data Exploration using Deep Generative Models (ICDE 2020)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F7F\\u7528VAE\\u7684\\u65B9\\u6CD5\"))), mdx(\"p\", null, \"\\u54C8\\u5DE5\\u5927\\u6302\\u51FA\\u6765\\u7684\\u4E24\\u7BC7\\uFF0C\\u4F3C\\u4E4E\\u90FD\\u8FD8\\u6CA1\\u4E2D\\uFF1A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LAQP: Learning-based Approximate Query Processing (2020.3)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Approximate Query Processing for Group-By Queries based on Conditional Generative Models (2021.1)\")), mdx(\"h1\", null, \"2. Cardinality Estimation\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Are We Ready For Learned Cardinality Estimation? (arXiv 2020)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u5BF9\\u8FD1\\u5E74\\u57FA\\u6570\\u4F30\\u8BA1\\u8BBA\\u6587\\u8FDB\\u884C\\u4E86\\u5B9E\\u9A8C\\u5BF9\\u6BD4\\u548C\\u8BA8\\u8BBA\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/sfu-db/AreCELearnedYet\"\n  }, \"https://github.com/sfu-db/AreCELearnedYet\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"A Unified Deep Model of Learning from both Data and Queries for Cardinality Estimation (SIGMOD 2021)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u7ED3\\u5408\\u4E86data-driven\\u548Cquery-driven\"))), mdx(\"h2\", null, \"1) Data-based\"), mdx(\"h2\", null, \"\\u4F20\\u7EDF\\u673A\\u5668\\u5B66\\u4E60\\u65B9\\u6CD5:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"DeepDB: Learn from Data, not from Queries! (VLDB 2020)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F7F\\u7528Sum-Product Networks\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/DataManagementLab/deepdb-public\"\n  }, \"https://github.com/DataManagementLab/deepdb-public\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"FLAT: Fast, Lightweight and Accurate Method for Cardinality Estimation (VLDB 2020)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u5BF9Sum-Product Networks\\u518D\\u6B21\\u8FDB\\u884C\\u6539\\u8FDB\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"An Approach Based on Bayesian Networks for Query Selectivity Estimation (DASFAA 2019)\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F7F\\u7528\\u8D1D\\u53F6\\u65AF\\u7F51\\u7EDC\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"BayesCard: A Unified Bayesian Framework for Cardinality Estimation (arXiv 2020)\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F7F\\u7528\\u8D1D\\u53F6\\u65AF\\u7F51\\u7EDC\"))), mdx(\"h2\", null, \"\\u6DF1\\u5EA6\\u5B66\\u4E60\\u65B9\\u6CD5\\uFF1A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Deep Unsupervised Cardinality Estimation (VLDB 2019)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Naru\\uFF0CNeuroCard\\u7684\\u524D\\u5E8F\\u5DE5\\u4F5C\\uFF0C\\u4F7F\\u7528Masked Autoencoder (MADE)\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/naru-project/naru\"\n  }, \"https://github.com/naru-project/naru\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NeuroCard: One Cardinality Estimator for All Tables (VLDB 2020)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/neurocard/neurocard\"\n  }, \"https://github.com/neurocard/neurocard\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Deep Learning Models for Selectivity Estimation of Multi-Attribute Queries (SIGMOD 2020)\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Learning to Sample: Counting with Complex Queries (VLDB 2020) \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Astrid: Accurate Selectivity Estimation for String Predicates using Deep Learning (VLDB 2021)\"))), mdx(\"h2\", null, \"2) Query-based\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Learned Cardinalities: Estimating Correlated Joins with Deep Learning \\uFF08CIDR2019\\uFF09\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"MSCN\\u7684\\u524D\\u5E8F\\u5DE5\\u4F5C\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Estimating Cardinalities with Deep Sketches (SIGMOD 2019)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"MSCN\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/andreaskipf/learnedcardinalities\"\n  }, \"https://github.com/andreaskipf/learnedcardinalities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Consistent and Flexible Selectivity Estimation for High-Dimensional Data (SIGMOD 2021)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"QuickSel: Quick Selectivity Learning with Mixture Models (SIGMOD 2020)\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u6DF7\\u5408\\u6A21\\u578B\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/illinoisdata/quicksel\"\n  }, \"https://github.com/illinoisdata/quicksel\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Learned Cardinality Estimation for Similarity Queries (SIGMOD 2021)\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4EC5\\u4F9B\\u53C2\\u8003\\uFF1A\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/TsinghuaDatabaseGroup/Dima\"\n  }, \"https://github.com/TsinghuaDatabaseGroup/Dima\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Towards a learning optimizer for shared clouds (VLDB 2018)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Learning State Representations for Query Optimization with Deep Reinforcement Learning (DEEM@SIGMOD2018)\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"An Empirical Analysis of Deep Learning for Cardinality Estimation (arXiv 2019)\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u4F7F\\u7528NN\\u548CRNN\\u8FDB\\u884C\\u57FA\\u6570\\u4F30\\u8BA1\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Efficiently Approximating Selectivity Functions using Low Overhead Regression Models (VLDB 2020)\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u5FAE\\u8F6F\\u7684\\u5DE5\\u4F5C\\uFF0C\\u63D0\\u51FA\\u4E86\\u4E00\\u79CD\\u65B0\\u7684\\u6A21\\u578B\\u6784\\u5EFA\\u65B9\\u6CD5\\uFF0C\\u8BE5\\u65B9\\u6CD5\\u589E\\u91CF\\u751F\\u6210\\u8BAD\\u7EC3\\u6570\\u636E\\u5E76\\u4F7F\\u7528\\u8FD1\\u4F3C\\u9009\\u62E9\\u6027\\u6807\\u7B7E\\uFF0C\\u5C06\\u603B\\u6784\\u5EFA\\u6210\\u672C\\u964D\\u4F4E\\u4E00\\u4E2A\\u6570\\u91CF\\u7EA7\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Flow-Loss: Learning Cardinality Estimates That Matter (arXiv 2020)\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u9488\\u5BF9\\u57FA\\u6570\\u4F30\\u8BA1\\u95EE\\u9898\\u5F15\\u5165\\u4E00\\u4E2A\\u65B0\\u7684\\u635F\\u5931\\u51FD\\u6570flow-loss\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Flexible Operator Embeddings via Deep Learning (arXiv 2019)\"))), mdx(\"h1\", null, \"3. Cost Estimation\"), mdx(\"h2\", null, \"Single Query\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"An End-to-End Learning-based Cost Estimator (arXiv 2019)(VLDB 2019)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/TsinghuaDatabaseGroup/AI4DBCode\"\n  }, \"https://github.com/TsinghuaDatabaseGroup/AI4DBCode\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/greatji/Learning-based-cost-estimator\"\n  }, \"https://github.com/greatji/Learning-based-cost-estimator\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Plan-Structured Deep Neural Network Models for Query Performance Prediction (VLDB 2019)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cost Models for Big Data Query Processing: Learning, Retrofitting, and Our Findings (SIGMOD 2020)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Efficient Deep Learning Pipelines for Accurate Cost Estimations Over Large Scale Query Workload (SIGMOD 2021)\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"DBMS Fitting: Why should we learn what we already know? (CIDR 2020)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"A Note On Operator-Level Query Execution Cost Modeling (2020)\"))), mdx(\"h2\", null, \"Concurrent\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Query Performance Prediction for Concurrent Queries using Graph Embedding (VLDB 2020)\"))), mdx(\"h1\", null, \"4. Join Optimization\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"PGMJoins: Random Join Sampling with Graphical Models (SIGMOD2021)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/shanghoosh1/PGMJoins\"\n  }, \"https://github.com/shanghoosh1/PGMJoins\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reinforcement Learning with Tree-LSTM for Join Order Selection (ICDE 2020)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Deep Reinforcement Learning for Join Order Enumeration (aiDM@SIGMOD 2018)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Research Challenges in Deep Reinforcement Learning-based Join Query Optimization (aiDM 2020)\")))), mdx(\"h1\", null, \"5. Query Plan\"), mdx(\"p\", null, \"\\u524D\\u56DB\\u7BC7\\u4E3A\\u540C\\u4E00\\u4F5C\\u8005Ryan Marcus\\u7684\\u5DE5\\u4F5C\\uFF1A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Towards a Hands-Free Query Optimizer through Deep Learning \\uFF08CIDR 2019)\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u8FD9\\u4E2A\\u4F5C\\u8005\\u4E5F\\u662F\\u540E\\u6765Neo\\u3001Bao\\u7684\\u4F5C\\u8005\\uFF0C\\u201C\\u613F\\u666F\\u8BBA\\u6587\\u201D\\uFF0C\\u4E0D\\u6D89\\u53CA\\u4EE3\\u7801\\u3002\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Neo: A Learned Query Optimizer (VLDB 2019)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u8BBA\\u6587\\u4E2D\\u4EC5\\u5F00\\u6E90\\u4E86\\u884C\\u5411\\u91CF\\u5D4C\\u5165\\u90E8\\u5206\\u7684\\u4EE3\\u7801\\uFF1A\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/parimarjan/db-embedding-tools\"\n  }, \"https://github.com/parimarjan/db-embedding-tools\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Bao: Learning to Steer Query Optimizers (2020)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Bao: Making Learned Query Optimization Practical (SIGMOD 2021)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/learnedsystems/baoforpostgresql\"\n  }, \"https://github.com/learnedsystems/baoforpostgresql\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"2020\\u548C2021\\u8FD9\\u4E24\\u7BC7\\u57FA\\u672C\\u4E00\\u6837\\uFF0C\\u53EF\\u4EE5\\u53EA\\u770B2021 SIGMOD\"))), mdx(\"p\", null, \"\\u5FAE\\u8F6F\\uFF1A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Microlearner: A fine-grained Learning Optimizer for Big Data Workloads at Microsoft (ICDE 2021)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u5FAE\\u8F6F\\u7684\\u5DE5\\u4F5C\\uFF0C\\u504F\\u5411\\u5FAE\\u8F6F\\u5B9E\\u9645\\u5E94\\u7528\\uFF0C\\u63CF\\u8FF0\\u4E86\\u4E3A Microsoft \\u7684\\u5927\\u6570\\u636E\\u5DE5\\u4F5C\\u8D1F\\u8F7D\\u6784\\u5EFA\\u5B66\\u4E60\\u67E5\\u8BE2\\u4F18\\u5316\\u5668\\u3002\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Steering Query Optimizers: A Practical Take on Big Data Workloads (SIGMOD 2021)\")))), mdx(\"p\", null, \"\\u5176\\u4ED6\\uFF1A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ML-based Cross-Platform Query Optimization (ICDE 2020)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u6587\\u7AE0\\u57FA\\u4E8E\\u7684\\u8DE8\\u5E73\\u53F0\\u7CFB\\u7EDFRheem\\uFF1A\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/rheem-ecosystem/rheem\"\n  }, \"https://github.com/rheem-ecosystem/rheem\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Rheem\\u4E0A\\u7684\\u5DE5\\u4F5C\\u8D1F\\u8F7D\\uFF1A\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/rheem-ecosystem/rheem-benchmark\"\n  }, \"https://github.com/rheem-ecosystem/rheem-benchmark\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u5176\\u4F59\\u6E90\\u7801\\u672A\\u627E\\u5230\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Learning State Representations for Query Optimization with Deep Reinforcement Learning (DEEM@SIGMOD2018)\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u6587\\u7AE0\\u4E2D\\u91CD\\u70B9\\u5728\\u5B50\\u67E5\\u8BE2\\u7684\\u7279\\u5F81\\u7F16\\u7801\\u548C\\u72B6\\u6001\\u8F6C\\u79FB\\u51FD\\u6570\\u7684\\u6784\\u5EFA\\uFF0C\\u52A0\\u4E0A\\u53D1\\u8868\\u5E74\\u4EFD\\u8F83\\u65E9(18\\u5E74)\\uFF0C\\u66F4\\u591A\\u7684\\u50CF\\u662F\\u5BF9\\u673A\\u5668\\u5B66\\u4E60\\u5E94\\u7528\\u5230\\u67E5\\u8BE2\\u4F18\\u5316\\u5668\\u7684\\u63A2\\u7D22\\uFF0C\\u53EF\\u7565\\u8BFB\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#1-approximate-query-processing","title":"1. Approximate Query Processing"},{"url":"#2-cardinality-estimation","title":"2. Cardinality Estimation","items":[{"url":"#1-data-based","title":"1) Data-based"},{"url":"#传统机器学习方法","title":"传统机器学习方法:"},{"url":"#深度学习方法：","title":"深度学习方法："},{"url":"#2-query-based","title":"2) Query-based"}]},{"url":"#3-cost-estimation","title":"3. Cost Estimation","items":[{"url":"#single-query","title":"Single Query"},{"url":"#concurrent","title":"Concurrent"}]},{"url":"#4-join-optimization","title":"4. Join Optimization"},{"url":"#5-query-plan","title":"5. Query Plan"}]},"parent":{"relativePath":"PaperList.md"},"frontmatter":{"metaTitle":"AI4DB Paper","metaDescription":"Paper List that apply Artificial Intelligence/ Machine Learning technology to Database"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/","title":"Landing Page"}}},{"node":{"fields":{"slug":"/PaperList","title":"AI4DB Paper List"}}},{"node":{"fields":{"slug":"/PaperList/PaperWithCode","title":"Paper with Code"}}}]}},"pageContext":{"id":"12efaf38-6b2a-584d-ba83-9f69802dfd28"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}